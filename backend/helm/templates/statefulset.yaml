apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "my-helm-chart.fullname" . }}-postgres
spec:
  serviceName: "postgres"
  replicas: {{ .Values.postgres.replicaCount }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Retain
  selector:
    matchLabels:
      app: {{ include "my-helm-chart.fullname" . }}-postgres
  template:
    metadata:
      labels:
        app: {{ include "my-helm-chart.fullname" . }}-postgres
    spec:
      containers:
        - name: postgres
          image: "postgres:13"
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-helm-chart.fullname" . }}-secret
                  key: DB_USER
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-helm-chart.fullname" . }}-secret
                  key: DB_HOST
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-helm-chart.fullname" . }}-secret
                  key: DB_PASS
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-helm-chart.fullname" . }}-secret
                  key: DB_NAME
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-helm-chart.fullname" . }}-secret
                  key: DB_PORT
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
      annotations:
        volume.beta.kubernetes.io/persistent-volume-retain-policy: "Retain"
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi


